<?php
return [
    // Тип запроса
    'GET'  => [
        // Роут
        // Для получения всех параметров request()->get()
        // Для получения конкретного параметра request()->get({parameter_name})
        'v1/events/getMyEvents' => [
            // Описание роута
            'description'   => 'Получение списка мероприятий',
            // Активность роутра
            'active'        => true,
            // Контроллер обрабатывающий роут
            'controller'    => 'Local\Api\Controllers\V1\Events@getMyEvents',
            //'contentType' => 'application/json',
            // Безопасность участвует при запуске интерфейса
            'security'      => [
                'auth'  => [
                    'required' => true, // true || false
                    'type'     => 'token',
                ],
                // Настройки безопасности для логинов
                // Данный ключ исключен из публичной документации
                'login' => [
                    // Доступ к методу будет доступен только для логинов из списка
                    'whitelist' => [
                    ]
                ],
                // Настройки безопасности для токенов
                // Данный ключ исключен из публичной документации
                'token' => [
                    // Проверять срок годности токена
                    // Если checkExpire не указан в роуте, тогда для роута будет происходить проверка срока годности
                    // согласно параметра из настроек модуля, раздел Безопасность
                    // Если токен находится в белом списке, тогда параметр игнорируется
                    'checkExpire' => true, // true || false
                    // Доступ к методу будет доступен только для токенов из списка
                    'whitelist'   => [
                        // 'b3bfb6b8-82dca90f-6049641b-76d957d6',
                        // 'bc95d11b-f2fdf7f4-15e869d3-882e72b5',
                        // '408f4f2e-d5a6e4a7-06930a16-8301b343',
                    ]
                ],

            ],
            // Параметры запроса
            // Напоминание: для получения текущих параметров в контроллере, можно воспользоваться методом request()->map()
            'parameters'    => [
                //                'id' => [
                //                    // Обязательный параметр
                //                    'required' => true,
                //                    'description' => 'Внешний ID заявки',
                //                    'type' => 'string'
                //                ]
            ],
            // Настройки для поведения роута в документации
            // Данный ключ исключен из публичной документации
            'documentation' => [
                // Исключить роут
                'exclude' => [
                    // Из документации в административной части сайта
                    'admin'  => false, // true || false
                    // Из документации в публичной части сайта
                    'public' => false, // true || false
                ]
            ]
        ],
        'v1/events/{{id}}/' => [
            // Описание роута
            'description'   => 'Получение списка мероприятий',
            // Активность роутра
            'active'        => true,
            // Контроллер обрабатывающий роут
            'controller'    => 'Local\Api\Controllers\V1\Events@getEvent',
            // Безопасность участвует при запуске интерфейса
            'security'      => [
                'auth'  => [
                    'required' => true, // true || false
                    'type'     => 'token',
                ],
                // Настройки безопасности для логинов
                // Данный ключ исключен из публичной документации
                'login' => [
                    // Доступ к методу будет доступен только для логинов из списка
                    'whitelist' => [
                    ]
                ],
                // Настройки безопасности для токенов
                // Данный ключ исключен из публичной документации
                'token' => [
                    // Проверять срок годности токена
                    // Если checkExpire не указан в роуте, тогда для роута будет происходить проверка срока годности
                    // согласно параметра из настроек модуля, раздел Безопасность
                    // Если токен находится в белом списке, тогда параметр игнорируется
                    'checkExpire' => true, // true || false
                    // Доступ к методу будет доступен только для токенов из списка
                    'whitelist'   => [
                        // 'b3bfb6b8-82dca90f-6049641b-76d957d6',
                        // 'bc95d11b-f2fdf7f4-15e869d3-882e72b5',
                        // '408f4f2e-d5a6e4a7-06930a16-8301b343',
                    ]
                ],

            ],
            // Параметры запроса
            // Напоминание: для получения текущих параметров в контроллере, можно воспользоваться методом request()->map()
            'parameters'    => [
                'id' => [
                    'required' => true,
                    'type' => 'string',
                    'description' => 'uuid мероприятия'
                ],
            ],
            // Настройки для поведения роута в документации
            // Данный ключ исключен из публичной документации
            'documentation' => [
                // Исключить роут
                'exclude' => [
                    // Из документации в административной части сайта
                    'admin'  => false, // true || false
                    // Из документации в публичной части сайта
                    'public' => false, // true || false
                ]
            ]
        ],
        'v1/events/{{id}}/getTakenSeats' => [
            // Описание роута
            'description'   => 'Получение списка занятых мест',
            // Активность роутра
            'active'        => true,
            // Контроллер обрабатывающий роут
            'controller'    => 'Local\Api\Controllers\V1\Events@getTakenSeats',
            // Безопасность участвует при запуске интерфейса
            'security'      => [
                'auth'  => [
                    'required' => false, // true || false
//                    'type'     => 'token',
                ],
                // Настройки безопасности для логинов
                // Данный ключ исключен из публичной документации
                'login' => [
                    // Доступ к методу будет доступен только для логинов из списка
                    'whitelist' => [
                    ]
                ],
                // Настройки безопасности для токенов
                // Данный ключ исключен из публичной документации
                'token' => [
                    // Проверять срок годности токена
                    // Если checkExpire не указан в роуте, тогда для роута будет происходить проверка срока годности
                    // согласно параметра из настроек модуля, раздел Безопасность
                    // Если токен находится в белом списке, тогда параметр игнорируется
                    'checkExpire' => true, // true || false
                    // Доступ к методу будет доступен только для токенов из списка
                    'whitelist'   => [
                    ]
                ],

            ],
            // Параметры запроса
            // Напоминание: для получения текущих параметров в контроллере, можно воспользоваться методом request()->map()
            'parameters'    => [
                'id' => [
                    'required' => true,
                    'type' => 'integer',
                    'description' => 'id мероприятия'
                ],
            ],
            // Настройки для поведения роута в документации
            // Данный ключ исключен из публичной документации
            'documentation' => [
                // Исключить роут
                'exclude' => [
                    // Из документации в административной части сайта
                    'admin'  => false, // true || false
                    // Из документации в публичной части сайта
                    'public' => false, // true || false
                ]
            ]
        ],
    ],
];
